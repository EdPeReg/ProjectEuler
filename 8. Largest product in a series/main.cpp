// https://projecteuler.net/problem=8

#include <iostream>
#include <string>
#include <sstream>

int main() {
	std::string number = "7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450";

	constexpr int LIMIT = 13;
	unsigned long long firstNumber;
	std::stringstream ss(number.substr(0,LIMIT));
	ss >> firstNumber;
	std::cout << "number: " << firstNumber << '\n';
	unsigned long long mul = 1;

	while(firstNumber) {
		short digit = firstNumber % 10;
		if(digit == 0) { // Any number multiplied by 0 is always 0.
			mul = 0;
			break;
		}

		mul *= digit;
		firstNumber /= 10;
	}

	unsigned long long max = mul;
	constexpr int LAST_MULTIPLE_13 = 988;
	for(unsigned long long i = 1; i <= LAST_MULTIPLE_13; ++i) {
		unsigned long long subNumber;
		ss.clear();
		ss.str(number.substr(i,LIMIT));
		ss >> subNumber;
		std::cout << "number: " << subNumber << '\n';

		mul = 1;
		while(subNumber) {
			short digit = subNumber % 10;
			if(digit == 0) { // Any number multiplied by 0 is always 0.
				mul = 0;
				break;
			}

			mul *= digit;
			subNumber /= 10;
		}

		if(max < mul) {
			max = mul;
		}
	}
	std::cout << max << '\n';

	return 0;
}
